using System;
using System.Collections.Generic;
using System.Linq;
using SmartMarketplace.Models;

namespace SmartMarketplace.Services
{
    public class MissionTemplateService : IMissionTemplateService
    {
        private readonly Dictionary<string, MissionTemplate> _templates;
        
        public MissionTemplateService()
        {
            _templates = InitializeTemplates();
        }
        
        public MissionTemplate GetTemplate(string domain, string experienceLevel)
        {
            var key = domain.ToLower();
            if (_templates.ContainsKey(key))
            {
                var template = _templates[key];
                // Adapter le template selon le niveau d'exp√©rience
                return AdaptTemplateForExperience(template, experienceLevel);
            }
            
            return _templates["backend"]; // Template par d√©faut
        }
        
        public List<string> GetDomainSpecificTechnologies(string domain)
        {
            var template = GetTemplate(domain, "3-7");
            var allTechs = new List<string>();
            allTechs.AddRange(template.CoreTechnologies);
            allTechs.AddRange(template.ComplementaryTechnologies.Take(3)); // Limiter les technologies compl√©mentaires
            return allTechs;
        }
        
        public string GenerateContextualDescription(MissionTemplate template, ExtractedInformation info)
        {
            var random = new Random();
            var selectedProject = template.ProjectTypes[random.Next(template.ProjectTypes.Count)];
            var selectedResponsibilities = template.ResponsibilityTemplates.Take(4).ToList();
            
            return $@"üéØ CONTEXTE DU PROJET :
{selectedProject}

üíº VOS MISSIONS :
{string.Join("\n", selectedResponsibilities.Select(r => $"‚Ä¢ {r}"))}

üõ†Ô∏è PROFIL RECHERCH√â :
{template.ExperienceContext}

üîß STACK TECHNIQUE :
{string.Join(", ", template.CoreTechnologies.Take(5))}

üìç MODALIT√âS :
‚Ä¢ Localisation : {info.City}, {info.Country}
‚Ä¢ Mode : {info.WorkMode}
‚Ä¢ Dur√©e : {info.Duration} {(info.DurationType == "MONTH" ? "mois" : "ans")}
‚Ä¢ Exp√©rience requise : {info.Experience} ans
‚Ä¢ Type de contrat : {info.ContractType}

{GetClosingMessage(template.Domain)}";
        }
        
        private Dictionary<string, MissionTemplate> InitializeTemplates()
        {
            return new Dictionary<string, MissionTemplate>
            {
                ["backend"] = new MissionTemplate
                {
                    Domain = "Backend",
                    TitleTemplate = "D√©veloppeur Backend {tech} - {city}",
                    ContextDescription = "D√©veloppement d'APIs robustes et scalables",
                    ResponsibilityTemplates = new List<string>
                    {
                        "Conception et d√©veloppement d'APIs RESTful/GraphQL",
                        "Optimisation des performances et de la scalabilit√©",
                        "Int√©gration avec bases de donn√©es et services externes",
                        "Mise en place de tests unitaires et d'int√©gration",
                        "S√©curisation des endpoints et gestion des authentifications",
                        "Documentation technique des APIs",
                        "Monitoring et debugging des services backend"
                    },
                    CoreTechnologies = new List<string> { "Node.js", "Express.js", "MongoDB", "PostgreSQL", "Redis" },
                    ComplementaryTechnologies = new List<string> { "Docker", "JWT", "Swagger", "Jest", "Postman", "AWS", "Nginx" },
                    ExperienceContext = "Solide exp√©rience en d√©veloppement backend avec ma√Ætrise des architectures API",
                    ProjectTypes = new List<string>
                    {
                        "D√©veloppement d'une API e-commerce avec gestion des commandes et paiements",
                        "Cr√©ation d'un syst√®me de gestion de contenu avec API headless",
                        "Mise en place d'une architecture microservices pour une fintech",
                        "D√©veloppement d'APIs pour application mobile avec forte charge"
                    }
                },
                ["frontend"] = new MissionTemplate
                {
                    Domain = "Frontend",
                    TitleTemplate = "D√©veloppeur Frontend {tech} - {city}",
                    ContextDescription = "Cr√©ation d'interfaces utilisateur modernes et performantes",
                    ResponsibilityTemplates = new List<string>
                    {
                        "D√©veloppement d'interfaces utilisateur responsive",
                        "Int√©gration avec APIs REST et GraphQL",
                        "Optimisation des performances et de l'accessibilit√©",
                        "Mise en place de tests unitaires et e2e",
                        "Collaboration √©troite avec les √©quipes UX/UI",
                        "Maintenance et √©volution du code existant",
                        "Veille technologique et bonnes pratiques"
                    },
                    CoreTechnologies = new List<string> { "React", "TypeScript", "CSS3", "HTML5", "JavaScript" },
                    ComplementaryTechnologies = new List<string> { "Redux", "React Router", "Styled Components", "Jest", "Cypress", "Webpack", "Sass" },
                    ExperienceContext = "Expertise en d√©veloppement frontend avec ma√Ætrise des frameworks modernes",
                    ProjectTypes = new List<string>
                    {
                        "Refonte compl√®te d'une plateforme e-commerce avec React",
                        "D√©veloppement d'un dashboard admin avec visualisations avanc√©es",
                        "Cr√©ation d'une PWA pour am√©liorer l'exp√©rience mobile",
                        "Interface de trading en temps r√©el avec WebSockets"
                    }
                },
                ["fullstack"] = new MissionTemplate
                {
                    Domain = "Fullstack",
                    TitleTemplate = "D√©veloppeur Fullstack {tech} - {city}",
                    ContextDescription = "D√©veloppement complet d'applications web modernes",
                    ResponsibilityTemplates = new List<string>
                    {
                        "D√©veloppement frontend et backend de l'application",
                        "Conception de l'architecture technique globale",
                        "Int√©gration compl√®te des fonctionnalit√©s",
                        "Optimisation des performances full-stack",
                        "D√©ploiement et maintenance de l'application",
                        "Collaboration avec les √©quipes produit et design",
                        "Formation et support technique aux √©quipes"
                    },
                    CoreTechnologies = new List<string> { "React", "Node.js", "MongoDB", "Express.js", "TypeScript" },
                    ComplementaryTechnologies = new List<string> { "Redux", "JWT", "Docker", "AWS", "Git", "Jest", "Cypress" },
                    ExperienceContext = "Vision compl√®te du d√©veloppement web avec expertise frontend et backend",
                    ProjectTypes = new List<string>
                    {
                        "D√©veloppement complet d'une marketplace B2B",
                        "Cr√©ation d'une plateforme SaaS de gestion de projets",
                        "Application de r√©servation en ligne avec paiements",
                        "Syst√®me de gestion documentaire avec workflow"
                    }
                },
                ["mobile"] = new MissionTemplate
                {
                    Domain = "Mobile",
                    TitleTemplate = "D√©veloppeur Mobile {tech} - {city}",
                    ContextDescription = "D√©veloppement d'applications mobiles natives et hybrides",
                    ResponsibilityTemplates = new List<string>
                    {
                        "D√©veloppement d'applications iOS et Android",
                        "Int√©gration avec APIs et services backend",
                        "Optimisation des performances mobiles",
                        "Gestion des notifications push",
                        "Publication sur App Store et Google Play",
                        "Tests sur diff√©rents devices et OS",
                        "Maintenance et mises √† jour des applications"
                    },
                    CoreTechnologies = new List<string> { "React Native", "Flutter", "Firebase", "Redux", "AsyncStorage" },
                    ComplementaryTechnologies = new List<string> { "Expo", "CodePush", "Fastlane", "Detox", "Flipper", "Crashlytics" },
                    ExperienceContext = "Expertise en d√©veloppement mobile avec connaissance des sp√©cificit√©s iOS/Android",
                    ProjectTypes = new List<string>
                    {
                        "Application e-commerce mobile avec paiement int√©gr√©",
                        "App de livraison avec g√©olocalisation temps r√©el",
                        "Application bancaire mobile s√©curis√©e",
                        "R√©seau social mobile avec chat et notifications"
                    }
                },
                ["devops"] = new MissionTemplate
                {
                    Domain = "DevOps",
                    TitleTemplate = "Ing√©nieur DevOps {tech} - {city}",
                    ContextDescription = "Automatisation et optimisation de l'infrastructure",
                    ResponsibilityTemplates = new List<string>
                    {
                        "Mise en place de pipelines CI/CD",
                        "Gestion de l'infrastructure cloud (AWS/Azure)",
                        "Containerisation avec Docker et Kubernetes",
                        "Monitoring et alerting des services",
                        "Automatisation des d√©ploiements",
                        "S√©curisation de l'infrastructure",
                        "Optimisation des co√ªts cloud"
                    },
                    CoreTechnologies = new List<string> { "Docker", "Kubernetes", "AWS", "Jenkins", "Terraform" },
                    ComplementaryTechnologies = new List<string> { "Ansible", "Prometheus", "Grafana", "ELK Stack", "GitLab CI", "Helm" },
                    ExperienceContext = "Solide exp√©rience en infrastructure cloud et automatisation",
                    ProjectTypes = new List<string>
                    {
                        "Migration d'infrastructure vers le cloud AWS",
                        "Mise en place d'une architecture microservices",
                        "Automatisation compl√®te des d√©ploiements",
                        "Optimisation d'infrastructure haute disponibilit√©"
                    }
                }
            };
        }
        
        private MissionTemplate AdaptTemplateForExperience(MissionTemplate template, string experienceLevel)
        {
            var adaptedTemplate = new MissionTemplate
            {
                Domain = template.Domain,
                TitleTemplate = template.TitleTemplate,
                ContextDescription = template.ContextDescription,
                ResponsibilityTemplates = new List<string>(template.ResponsibilityTemplates),
                CoreTechnologies = new List<string>(template.CoreTechnologies),
                ComplementaryTechnologies = new List<string>(template.ComplementaryTechnologies),
                ProjectTypes = new List<string>(template.ProjectTypes)
            };
            
            // Adapter selon le niveau d'exp√©rience
            switch (experienceLevel)
            {
                case "0-3":
                    adaptedTemplate.ExperienceContext = "Profil junior avec bases solides et envie d'apprendre";
                    adaptedTemplate.ResponsibilityTemplates = template.ResponsibilityTemplates.Take(4).ToList();
                    break;
                case "7-12":
                    adaptedTemplate.ExperienceContext = "Profil senior avec capacit√© de mentoring et d'architecture";
                    adaptedTemplate.ResponsibilityTemplates.Add("Mentoring des d√©veloppeurs junior");
                    adaptedTemplate.ResponsibilityTemplates.Add("D√©finition de l'architecture technique");
                    break;
                case "12+":
                    adaptedTemplate.ExperienceContext = "Expert technique avec vision strat√©gique";
                    adaptedTemplate.ResponsibilityTemplates.Add("Leadership technique de l'√©quipe");
                    adaptedTemplate.ResponsibilityTemplates.Add("D√©finition des standards et bonnes pratiques");
                    break;
                default: // 3-7
                    adaptedTemplate.ExperienceContext = template.ExperienceContext;
                    break;
            }
            
            return adaptedTemplate;
        }
        
        private string GetClosingMessage(string domain)
        {
            var messages = new Dictionary<string, string>
            {
                ["Backend"] = "Rejoignez notre √©quipe pour construire des APIs robustes et scalables !",
                ["Frontend"] = "Participez √† la cr√©ation d'exp√©riences utilisateur exceptionnelles !",
                ["Fullstack"] = "Contribuez √† l'ensemble de notre stack technologique !",
                ["Mobile"] = "D√©veloppez la prochaine app qui r√©volutionnera le mobile !",
                ["DevOps"] = "Optimisez notre infrastructure pour une performance maximale !"
            };
            
            return messages.GetValueOrDefault(domain, "Rejoignez notre √©quipe technique dynamique !");
        }
    }
}
